@model List<Finance_Literacy_App_Web.Models.UserTaskAnswer>

@{
    ViewData["Title"] = "User Answers";
    var group = ViewBag.Group as Finance_Literacy_App_Web.Models.Group;
    var lessons = ViewBag.Lessons as List<Finance_Literacy_App_Web.Models.Lesson> ?? new List<Finance_Literacy_App_Web.Models.Lesson>();
    string sortOrder = ViewBag.SortOrder as string ?? "asc"; // По умолчанию A-Z
}

<h1>User Answers for Group: @group.Name</h1>

<!-- Фильтрация по урокам -->
<div class="row g-2 mb-3">
    <div class="col-auto">
        <select id="lessonFilter" class="form-select" onchange="filterTable()">
            <option value="">All Lessons</option>
            @foreach (var lesson in lessons)
            {
                <option value="@lesson.Id">@lesson.Title</option>
            }
        </select>
    </div>
</div>

<!-- Сортировка по пользователям -->
<div class="mb-3">
    <button id="sortButton" class="btn btn-primary" onclick="sortTable()">
        Sort by User (@(sortOrder == "asc" ? "A-Z" : "Z-A"))
    </button>
</div>

@if (Model.Any())
{
    <table class="table table-bordered" id="answersTable">
        <thead>
            <tr>
                <th>User</th>
                <th>Lesson</th>
                <th>Task Question</th>
                <th>User Answer</th>
                <th>Correct Answer</th>
                <th>Result</th>
                <th>Submitted At</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var answer in Model)
            {
                <tr data-lesson-id="@answer.Task.LessonId">
                    <td>@answer.User.UserName</td>
                    <td>@answer.Task.Lesson.Title (Module: @answer.Task.Lesson.Module.Title)</td>
                    <td>@answer.Task.Question</td>
                    <td>@answer.Answer</td>
                    <td>@answer.Task.CorrectAnswer</td>
                    <td>
                        @if (string.Compare(answer.Answer?.Trim(), answer.Task.CorrectAnswer?.Trim(), StringComparison.OrdinalIgnoreCase) == 0)
                        {
                            <span class="badge bg-success">Correct</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">Incorrect</span>
                        }
                    </td>
                    <td>@answer.SubmittedAt.ToString("g")</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Кнопка для экспорта в Excel -->
    <a asp-action="ExportUserAnswersToExcel" asp-route-id="@group.Id" class="btn btn-success mb-3">Export to Excel</a>
}
else
{
    <p>No answers have been submitted by users in this group.</p>
}

<a asp-action="Groups" class="btn btn-secondary mt-3">Back to Groups</a>

<script>
    let currentSortOrder = '@sortOrder';

    function filterTable() {
        var lessonId = document.getElementById('lessonFilter').value;
        var rows = document.getElementById('answersTable').getElementsByTagName('tr');
        for (var i = 1; i < rows.length; i++) {
            var rowLessonId = rows[i].getAttribute('data-lesson-id');
            if (lessonId === "" || lessonId == rowLessonId) {
                rows[i].style.display = '';
            } else {
                rows[i].style.display = 'none';
            }
        }
    }

    function sortTable() {
        var table = document.getElementById('answersTable');
        var tbody = table.getElementsByTagName('tbody')[0];
        var rows = Array.from(tbody.getElementsByTagName('tr'));

        currentSortOrder = currentSortOrder === 'asc' ? 'desc' : 'asc';

        rows.sort((a, b) => {
            var aText = a.cells[0].textContent.trim();
            var bText = b.cells[0].textContent.trim();
            return currentSortOrder === 'asc'
                ? aText.localeCompare(bText)
                : bText.localeCompare(aText);
        });

        while (tbody.firstChild) {
            tbody.removeChild(tbody.firstChild);
        }
        rows.forEach(row => tbody.appendChild(row));

        document.getElementById('sortButton').textContent = 'Sort by User (' + (currentSortOrder === 'asc' ? 'A-Z' : 'Z-A') + ')';
    }

    window.onload = filterTable;
</script>